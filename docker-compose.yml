services:
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    networks: [stack]

  phpmyadmin:
    image: phpmyadmin:latest
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${DATABASE_USERNAME}
      PMA_PASSWORD: ${DATABASE_PASSWORD}
      PMA_ABSOLUTE_URI: ${PMA_ABSOLUTE_URI}
    depends_on: [mysql]
    restart: unless-stopped
    networks: [stack]

  strapi:
    build:
      context: ./strapi
      dockerfile: Dockerfile
      args:
        PUBLIC_URL: ${PUBLIC_URL}   # important for admin build under /strapi
        NODE_ENV: ${NODE_ENV}
    environment:
      NODE_ENV: ${NODE_ENV}
      HOST: ${HOST}
      PORT: ${PORT}
      PUBLIC_URL: ${PUBLIC_URL}
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      JWT_SECRET: ${JWT_SECRET}
      PUBLIC_BASE_URL: ${PUBLIC_BASE_URL}
    depends_on: [mysql]
    volumes:
      - strapi_uploads:/opt/app/public/uploads
    restart: unless-stopped
    networks: [stack]
    healthcheck:
      test: ["CMD", "sh", "-lc", "apk add --no-cache curl >/dev/null 2>&1 || true; curl -fsS http://localhost:1337/_health || exit 1"]
      interval: 20s
      timeout: 5s
      start_period: 90s
      retries: 8

  nextjs:
    build:
      context: ./nextjs
      dockerfile: Dockerfile
      args:
        # Git
        REPO_URL: https://github.com/bomboonsan/kasetsart-nextjs.git
        GIT_REF: main          # หรือชื่อ branch/tag หรือ commit SHA
        CACHE_BUSTER: ${CACHE_BUSTER}  # ใช้เปลี่ยนค่าเพื่อบังคับ re-clone
        # Build-time public envs
        NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL}
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
        NEXT_PUBLIC_STRAPI_GRAPHQL_API_URL: ${NEXT_PUBLIC_STRAPI_GRAPHQL_API_URL}
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_STRAPI_GRAPHQL_API_URL: ${NEXT_PUBLIC_STRAPI_GRAPHQL_API_URL}
      STRAPI_INTERNAL_URL: ${STRAPI_INTERNAL_URL}
      STRAPI_GRAPHQL_API_URL: ${STRAPI_GRAPHQL_API_URL}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      STRAPI_ADMIN_TOKEN: ${STRAPI_ADMIN_TOKEN}
    depends_on:
      - strapi
    restart: unless-stopped
    networks: [stack]
    healthcheck:
      test: ["CMD", "sh", "-lc", "apk add --no-cache curl >/dev/null 2>&1 || true; curl -fsS http://localhost:3000 || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 10
      start_period: 30s


  caddy:
    image: caddy:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - nextjs
      - strapi
      - phpmyadmin
    restart: unless-stopped
    networks: [stack]

volumes:
  mysql_data:
  strapi_uploads:
  caddy_data:
  caddy_config:

networks:
  stack:
    driver: bridge
