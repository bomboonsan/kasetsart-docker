version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: kasetsart_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    networks: [kasetsart-network]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: kasetsart_phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
      PMA_ABSOLUTE_URI: ${PMA_ABSOLUTE_URI}
    depends_on:
      - mysql
    restart: unless-stopped
    networks: [kasetsart-network]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:80"]
      interval: 15s
      timeout: 5s
      retries: 10

  strapi:
    build:
      context: ./strapi
      dockerfile: Dockerfile
      target: production
    container_name: kasetsart_strapi
    environment:
      NODE_ENV: production
      HOST: ${HOST}
      PORT: ${PORT}
      # Public URL เพื่อให้ admin และ asset ออกลิงก์ใต้ /strapi
      PUBLIC_URL: ${PUBLIC_URL}
      # DB
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      # secrets
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    networks: [kasetsart-network]
    volumes:
      - strapi_uploads:/app/public/uploads
      - strapi_data:/app/.tmp
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:1337/_health"]
      interval: 30s
      timeout: 10s
      retries: 10

  nextjs:
    build:
      context: ./nextjs
      dockerfile: Dockerfile
    container_name: kasetsart_nextjs
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_STRAPI_GRAPHQL_API_URL: ${NEXT_PUBLIC_STRAPI_GRAPHQL_API_URL}
      STRAPI_GRAPHQL_API_URL: ${STRAPI_GRAPHQL_API_URL}
      STRAPI_INTERNAL_URL: ${STRAPI_INTERNAL_URL}
      API_BASE: ${API_BASE}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
    depends_on:
      strapi:
        condition: service_healthy
    restart: unless-stopped
    networks: [kasetsart-network]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 10

  caddy:
    image: caddy:alpine
    container_name: kasetsart_caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - nextjs
      - strapi
      - phpmyadmin
    restart: unless-stopped
    networks: [kasetsart-network]

networks:
  kasetsart-network:
    driver: bridge

volumes:
  mysql_data:
  strapi_uploads:
  strapi_data:
  caddy_data:
  caddy_config:
