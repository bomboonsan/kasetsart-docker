name: kasetsart-stack

services:
  mysql:
    image: mariadb:10
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    command: ["mysqld","--default-authentication-plugin=mysql_native_password","--character-set-server=utf8mb4","--collation-server=utf8mb4_unicode_ci"]
    volumes:
      - mysql_data:/var/lib/mysql
    networks: [appnet]

  strapi:
    build:
      context: ../api
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on: [mysql]
    environment:
      NODE_ENV: production
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      DATABASE_CLIENT: mysql
      DATABASE_HOST: ${MYSQL_HOST}
      DATABASE_PORT: ${MYSQL_PORT}
      DATABASE_NAME: ${MYSQL_DATABASE}
      DATABASE_USERNAME: ${MYSQL_USER}
      DATABASE_PASSWORD: ${MYSQL_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_SSL: ${DATABASE_SSL}
      URL: ${PUBLIC_BASE_URL}/strapi
    networks: [appnet]
    volumes:
      - strapi_uploads:/app/public/uploads

  next:
    build:
      context: ../kasetkart-ui
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      API_URL: ${STRAPI_INTERNAL_URL}
      API_BASE: ${API_BASE}  
      AUTH_URL: ${NEXTAUTH_URL}
      AUTH_SECRET: ${NEXTAUTH_SECRET}
      AUTH_TRUST_HOST: "true"
    depends_on: [strapi]
    networks: [appnet]

  phpmyadmin:
    image: phpmyadmin:5-apache
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
      PMA_ABSOLUTE_URI: ${PMA_ABSOLUTE_URI}
      UPLOAD_LIMIT: 256M
    depends_on: [mysql]
    networks: [appnet]

  caddy:
    image: caddy:2
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on: [next, strapi, phpmyadmin]
    networks: [appnet]

networks:
  appnet:

volumes:
  mysql_data:
  caddy_data:
  caddy_config:
  strapi_uploads: